matrix:
  include:
    - {osx_image: xcode8.3,     env: 'SWFT=3.1  PLAT=iOS      DST="OS=10.3.1,name=iPhone SE"',       os: osx, language: objective-c}
    - {osx_image: xcode8.3,     env: 'SWFT=3.1  PLAT=tvOS     DST="OS=10.2,name=Apple TV 1080p"',    os: osx, language: objective-c}
    - {osx_image: xcode8.3,     env: 'SWFT=3.1  PLAT=macOS    DST="arch=x86_64"',                    os: osx, language: objective-c}
    - {osx_image: xcode8.3,     env: 'SWFT=3.1  PLAT=watchOS  DST="OS=3.2,name=Apple Watch - 38mm"', os: osx, language: objective-c}

    - {osx_image: xcode9.2,     env: 'SWFT=3.2  PLAT=iOS      DST="OS=11.2,name=iPhone SE"',         os: osx, language: objective-c}
    - {osx_image: xcode9.2,     env: 'SWFT=3.2  PLAT=tvOS     DST="OS=11.2,name=Apple TV"',          os: osx, language: objective-c}
    - {osx_image: xcode9.2,     env: 'SWFT=3.2  PLAT=macOS    DST="arch=x86_64"',                    os: osx, language: objective-c}
    - {osx_image: xcode9.2,     env: 'SWFT=3.2  PLAT=watchOS  DST="OS=4.2,name=Apple Watch - 38mm"', os: osx, language: objective-c}

    - {osx_image: xcode9.3,     env: 'SWFT=3.3  PLAT=iOS      DST="OS=11.3,name=iPhone SE"',         os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=3.3  PLAT=tvOS     DST="OS=11.3,name=Apple TV"',          os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=3.3  PLAT=macOS    DST="arch=x86_64"',                    os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=3.3  PLAT=watchOS  DST="OS=4.3,name=Apple Watch - 38mm"', os: osx, language: objective-c}

    - {osx_image: xcode9.2,     env: 'SWFT=4.0  PLAT=iOS      DST="OS=11.2,name=iPhone SE"',         os: osx, language: objective-c}
    - {osx_image: xcode9.2,     env: 'SWFT=4.0  PLAT=tvOS     DST="OS=11.2,name=Apple TV"',          os: osx, language: objective-c}
    - {osx_image: xcode9.2,     env: 'SWFT=4.0  PLAT=macOS    DST="arch=x86_64"',                    os: osx, language: objective-c}
    - {osx_image: xcode9.2,     env: 'SWFT=4.0  PLAT=watchOS  DST="OS=4.2,name=Apple Watch - 38mm"', os: osx, language: objective-c}

    # we would test this with Xcode 9.3 but it reliably fails and gives no useful rationale for failure
    - {osx_image: xcode9.2,     env: 'SWFT=4.0  PLAT=iOS      DST="OS=8.4,name=iPhone 4s"',          os: osx, language: objective-c}    
    
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=iOS      DST="OS=9.3,name=iPhone SE"',          os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=iOS      DST="OS=10.3.1,name=iPhone SE"',       os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=iOS      DST="OS=11.3,name=iPhone SE"',         os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=tvOS     DST="OS=10.2,name=Apple TV 1080p"',    os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=tvOS     DST="OS=11.3,name=Apple TV"',          os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=macOS    DST="arch=x86_64"',                    os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=watchOS  DST="OS=2.2,name=Apple Watch - 38mm"', os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=watchOS  DST="OS=3.2,name=Apple Watch - 38mm"', os: osx, language: objective-c}
    - {osx_image: xcode9.3,     env: 'SWFT=4.1  PLAT=watchOS  DST="OS=4.3,name=Apple Watch - 38mm"', os: osx, language: objective-c}

    - {os: linux, dist: trusty, sudo: required, language: generic, env: 'SWFT=3'}
    - {os: linux, dist: trusty, sudo: required, language: generic, env: 'SWFT=4'}

before_install:
  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    export SWIFT_VERSION=4.0;
    eval "$(curl -sL https://swiftenv.fuller.li/install.sh)";
  fi
install:
  case $PLAT in
  iOS|tvOS|macOS|watchOS)
    xcodebuild -scheme PromiseKit SWIFT_VERSION=$SWFT -quiet -destination "$DST" SWIFT_TREAT_WARNINGS_AS_ERRORS=YES build;;
  *)
    swift build;;
  esac
script:
  case $PLAT in
  iOS|tvOS|macOS)
    xcodebuild -scheme PromiseKit -destination "$DST" -quiet test -enableCodeCoverage YES;;
  watchOS)
    ;;
  *)
    swift test -Xswiftc -swift-version -Xswiftc $SWFT;;
  esac
after_success:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      bash <(curl -s https://codecov.io/bash);
    fi
